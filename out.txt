primClassif subClassif   tokenStr
  1 Int i;
CONTROL     DECLARE      Int
OPERAND     IDENTFIER    i
SEPARATOR   -            ;
  2 Float pi;
CONTROL     DECLARE      Float
OPERAND     IDENTFIER    pi
SEPARATOR   -            ;
  3 String day;
CONTROL     DECLARE      String
OPERAND     IDENTFIER    day
SEPARATOR   -            ;
  4    day 
OPERAND     IDENTFIER    day
  5    = 
OPERATOR    -            =
  6    "Sunday";
OPERAND     STRING       Sunday
SEPARATOR   -            ;
  7 String name;
CONTROL     DECLARE      String
OPERAND     IDENTFIER    name
SEPARATOR   -            ;
  8 name = "Anita Goodgrade";
OPERAND     IDENTFIER    name
OPERATOR    -            =
OPERAND     STRING       Anita Goodgrade
SEPARATOR   -            ;
  9 String weird;
CONTROL     DECLARE      String
OPERAND     IDENTFIER    weird
SEPARATOR   -            ;
  10 weird = "\tTX\tTexas\n";
OPERAND     IDENTFIER    weird
OPERATOR    -            =
OPERAND     STRING       . TX. Texas. 
                         09  09     0A
SEPARATOR   -            ;
  11 String loc;
CONTROL     DECLARE      String
OPERAND     IDENTFIER    loc
SEPARATOR   -            ;
  12 loc = "TX";
OPERAND     IDENTFIER    loc
OPERATOR    -            =
OPERAND     STRING       TX
SEPARATOR   -            ;
  13 
  14 // numeric stuff
  15 print(">>> Checking datatype results based on left operand");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       >>> Checking datatype results based on left operand
SEPARATOR   -            )
SEPARATOR   -            ;
  16 pi = 3.14;
OPERAND     IDENTFIER    pi
OPERATOR    -            =
OPERAND     FLOAT        3.14
SEPARATOR   -            ;
  17 Float area;
CONTROL     DECLARE      Float
OPERAND     IDENTFIER    area
SEPARATOR   -            ;
  18 Float radius2;
CONTROL     DECLARE      Float
OPERAND     IDENTFIER    radius2
SEPARATOR   -            ;
  19 Int radius;
CONTROL     DECLARE      Int
OPERAND     IDENTFIER    radius
SEPARATOR   -            ;
  20 radius = 8;
OPERAND     IDENTFIER    radius
OPERATOR    -            =
OPERAND     INTEGER      8
SEPARATOR   -            ;
  21 radius2 = radius ^ 2;  // square the radius
OPERAND     IDENTFIER    radius2
OPERATOR    -            =
OPERAND     IDENTFIER    radius
OPERATOR    -            ^
OPERAND     INTEGER      2
SEPARATOR   -            ;
  22 print("\t1. area all float");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . 1. area all float
                         09                 
SEPARATOR   -            )
SEPARATOR   -            ;
  23 area = pi * radius2;
OPERAND     IDENTFIER    area
OPERATOR    -            =
OPERAND     IDENTFIER    pi
OPERATOR    -            *
OPERAND     IDENTFIER    radius2
SEPARATOR   -            ;
  24 print("\tradius="
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . radius=
                         09       
  25       ,  radius
SEPARATOR   -            ,
OPERAND     IDENTFIER    radius
  26       ,  "radius2="
SEPARATOR   -            ,
OPERAND     STRING       radius2=
  27       ,  radius2
SEPARATOR   -            ,
OPERAND     IDENTFIER    radius2
  28       ,  "area="
SEPARATOR   -            ,
OPERAND     STRING       area=
  29       ,  area);
SEPARATOR   -            ,
OPERAND     IDENTFIER    area
SEPARATOR   -            )
SEPARATOR   -            ;
  30 Int irad2;
CONTROL     DECLARE      Int
OPERAND     IDENTFIER    irad2
SEPARATOR   -            ;
  31 irad2 = radius ^ 2;
OPERAND     IDENTFIER    irad2
OPERATOR    -            =
OPERAND     IDENTFIER    radius
OPERATOR    -            ^
OPERAND     INTEGER      2
SEPARATOR   -            ;
  32 print("\t2. area using int radius as left operand");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . 2. area using int radius as left operand
                         09                                        
SEPARATOR   -            )
SEPARATOR   -            ;
  33 area = irad2 * pi;
OPERAND     IDENTFIER    area
OPERATOR    -            =
OPERAND     IDENTFIER    irad2
OPERATOR    -            *
OPERAND     IDENTFIER    pi
SEPARATOR   -            ;
  34 print("\tradius=", radius, "irad2=", irad2, "area=", area);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . radius=
                         09       
SEPARATOR   -            ,
OPERAND     IDENTFIER    radius
SEPARATOR   -            ,
OPERAND     STRING       irad2=
SEPARATOR   -            ,
OPERAND     IDENTFIER    irad2
SEPARATOR   -            ,
OPERAND     STRING       area=
SEPARATOR   -            ,
OPERAND     IDENTFIER    area
SEPARATOR   -            )
SEPARATOR   -            ;
  35 Float circum;
CONTROL     DECLARE      Float
OPERAND     IDENTFIER    circum
SEPARATOR   -            ;
  36 Float twoPi;
CONTROL     DECLARE      Float
OPERAND     IDENTFIER    twoPi
SEPARATOR   -            ;
  37 print("\t3. circumference using twoPi as float * int");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . 3. circumference using twoPi as float * int
                         09                                           
SEPARATOR   -            )
SEPARATOR   -            ;
  38 twoPi = pi * 2;
OPERAND     IDENTFIER    twoPi
OPERATOR    -            =
OPERAND     IDENTFIER    pi
OPERATOR    -            *
OPERAND     INTEGER      2
SEPARATOR   -            ;
  39 circum = twoPi * radius;
OPERAND     IDENTFIER    circum
OPERATOR    -            =
OPERAND     IDENTFIER    twoPi
OPERATOR    -            *
OPERAND     IDENTFIER    radius
SEPARATOR   -            ;
  40 print("\tradius=", radius, "twoPi=", twoPi, "circum=", circum);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . radius=
                         09       
SEPARATOR   -            ,
OPERAND     IDENTFIER    radius
SEPARATOR   -            ,
OPERAND     STRING       twoPi=
SEPARATOR   -            ,
OPERAND     IDENTFIER    twoPi
SEPARATOR   -            ,
OPERAND     STRING       circum=
SEPARATOR   -            ,
OPERAND     IDENTFIER    circum
SEPARATOR   -            )
SEPARATOR   -            ;
  41 print("\t4. circumference using twoPi as int * float");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . 4. circumference using twoPi as int * float
                         09                                           
SEPARATOR   -            )
SEPARATOR   -            ;
  42 twoPi = 2 * pi;
OPERAND     IDENTFIER    twoPi
OPERATOR    -            =
OPERAND     INTEGER      2
OPERATOR    -            *
OPERAND     IDENTFIER    pi
SEPARATOR   -            ;
  43 circum = twoPi * radius;
OPERAND     IDENTFIER    circum
OPERATOR    -            =
OPERAND     IDENTFIER    twoPi
OPERATOR    -            *
OPERAND     IDENTFIER    radius
SEPARATOR   -            ;
  44 print("\tradius=", radius, "twoPi=", twoPi, "circum=", circum);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . radius=
                         09       
SEPARATOR   -            ,
OPERAND     IDENTFIER    radius
SEPARATOR   -            ,
OPERAND     STRING       twoPi=
SEPARATOR   -            ,
OPERAND     IDENTFIER    twoPi
SEPARATOR   -            ,
OPERAND     STRING       circum=
SEPARATOR   -            ,
OPERAND     IDENTFIER    circum
SEPARATOR   -            )
SEPARATOR   -            ;
  45 
  46 // Simple if
  47 i = 0;
OPERAND     IDENTFIER    i
OPERATOR    -            =
OPERAND     INTEGER      0
SEPARATOR   -            ;
  48 print(">>> First If");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       >>> First If
SEPARATOR   -            )
SEPARATOR   -            ;
  49 if loc == "TX" or loc == TN: // check for TX
CONTROL     FLOW         if
OPERAND     IDENTFIER    loc
OPERATOR    -            ==
OPERAND     STRING       TX
OPERATOR    -            or
OPERAND     IDENTFIER    loc
OPERATOR    -            ==
OPERAND     IDENTFIER    TN
SEPARATOR   -            :
  50     // It is TX
  51     print("\tloc is", loc);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . loc is
                         09      
SEPARATOR   -            ,
OPERAND     IDENTFIER    loc
SEPARATOR   -            )
SEPARATOR   -            ;
  52     // it is ok to have this statement on multiple lines.  
  53     // That is why we have a semicolon
  54     i 
OPERAND     IDENTFIER    i
  55        = 
OPERATOR    -            =
  56           i 
OPERAND     IDENTFIER    i
  57           + 1;
OPERATOR    -            +
OPERAND     INTEGER      1
SEPARATOR   -            ;
  58 endif;
CONTROL     END          endif
SEPARATOR   -            ;
  59 print("\tDone with first if");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . Done with first if
                         09                  
SEPARATOR   -            )
SEPARATOR   -            ;
  60 
  61 print(">>> Second If");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       >>> Second If
SEPARATOR   -            )
SEPARATOR   -            ;
  62 // if then else
  63 if i >= 5:
CONTROL     FLOW         if
OPERAND     IDENTFIER    i
OPERATOR    -            >=
OPERAND     INTEGER      5
SEPARATOR   -            :
  64     print("\t2nd if true, i >= 5, i =", i);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . 2nd if true, i >= 5, i =
                         09                        
SEPARATOR   -            ,
OPERAND     IDENTFIER    i
SEPARATOR   -            )
SEPARATOR   -            ;
  65 else:
CONTROL     END          else
SEPARATOR   -            :
  66     print("\t2nd if false, i >= 5, i =", i);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . 2nd if false, i >= 5, i =
                         09                         
SEPARATOR   -            ,
OPERAND     IDENTFIER    i
SEPARATOR   -            )
SEPARATOR   -            ;
  67 endif;
CONTROL     END          endif
SEPARATOR   -            ;
  68 // while and if 
  69 print(">>> First while i < 5");    
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       >>> First while i < 5
SEPARATOR   -            )
SEPARATOR   -            ;
  70 i = 1;
OPERAND     IDENTFIER    i
OPERATOR    -            =
OPERAND     INTEGER      1
SEPARATOR   -            ;
  71 while i < 5:
CONTROL     FLOW         while
OPERAND     IDENTFIER    i
OPERATOR    -            <
OPERAND     INTEGER      5
SEPARATOR   -            :
  72     print("\ttop of while, i=", i);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . top of while, i=
                         09                
SEPARATOR   -            ,
OPERAND     IDENTFIER    i
SEPARATOR   -            )
SEPARATOR   -            ;
  73     if i < 3:
CONTROL     FLOW         if
OPERAND     IDENTFIER    i
OPERATOR    -            <
OPERAND     INTEGER      3
SEPARATOR   -            :
  74         print("\twhile first if true i<3, i=", i);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . while first if true i<3, i=
                         09                           
SEPARATOR   -            ,
OPERAND     IDENTFIER    i
SEPARATOR   -            )
SEPARATOR   -            ;
  75         i = i + 2;
OPERAND     IDENTFIER    i
OPERATOR    -            =
OPERAND     IDENTFIER    i
OPERATOR    -            +
OPERAND     INTEGER      2
SEPARATOR   -            ;
  76         if loc != "TX":
CONTROL     FLOW         if
OPERAND     IDENTFIER    loc
OPERATOR    -            !=
OPERAND     STRING       TX
SEPARATOR   -            :
  77              print("\t\twhile inner if true ... wrong!");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . . while inner if true ... wrong!
                         0909                              
SEPARATOR   -            )
SEPARATOR   -            ;
  78         else:
CONTROL     END          else
SEPARATOR   -            :
  79              print('\t\twhile inner if false, loc!=\'TX\', loc is', loc);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . . while inner if false, loc!='TX', loc is
                         0909                                       
SEPARATOR   -            ,
OPERAND     IDENTFIER    loc
SEPARATOR   -            )
SEPARATOR   -            ;
  80         endif;
CONTROL     END          endif
SEPARATOR   -            ;
  81     else:
CONTROL     END          else
SEPARATOR   -            :
  82         print("\twhile first if false i<3, i=", i);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . while first if false i<3, i=
                         09                            
SEPARATOR   -            ,
OPERAND     IDENTFIER    i
SEPARATOR   -            )
SEPARATOR   -            ;
  83         if loc=="TX":
CONTROL     FLOW         if
OPERAND     IDENTFIER    loc
OPERATOR    -            ==
OPERAND     STRING       TX
SEPARATOR   -            :
  84              print("\t\twhile 2nd inner if true loc=='TX', loc is", loc);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . . while 2nd inner if true loc=='TX', loc is
                         0909                                         
SEPARATOR   -            ,
OPERAND     IDENTFIER    loc
SEPARATOR   -            )
SEPARATOR   -            ;
  85              i = i + 1;
OPERAND     IDENTFIER    i
OPERATOR    -            =
OPERAND     IDENTFIER    i
OPERATOR    -            +
OPERAND     INTEGER      1
SEPARATOR   -            ;
  86         else:
CONTROL     END          else
SEPARATOR   -            :
  87              print("\t\twhile 2nd inner if false ... wrong");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . . while 2nd inner if false ... wrong
                         0909                                  
SEPARATOR   -            )
SEPARATOR   -            ;
  88              i = i + 10;
OPERAND     IDENTFIER    i
OPERATOR    -            =
OPERAND     IDENTFIER    i
OPERATOR    -            +
OPERAND     INTEGER      10
SEPARATOR   -            ;
  89         endif;
CONTROL     END          endif
SEPARATOR   -            ;
  90         print("\twhile first if false after inner if");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . while first if false after inner if
                         09                                   
SEPARATOR   -            )
SEPARATOR   -            ;
  91     endif;
CONTROL     END          endif
SEPARATOR   -            ;
  92     print("\tbottom of while, i=", i);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . bottom of while, i=
                         09                   
SEPARATOR   -            ,
OPERAND     IDENTFIER    i
SEPARATOR   -            )
SEPARATOR   -            ;
  93 endwhile;
CONTROL     END          endwhile
SEPARATOR   -            ;
  94 print("\tAfter first while");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . After first while
                         09                 
SEPARATOR   -            )
SEPARATOR   -            ;
  95 
  96 // nested while loops
  97 print(">>> Second while i < 5 ... with nested while");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       >>> Second while i < 5 ... with nested while
SEPARATOR   -            )
SEPARATOR   -            ;
  98 i = 1;
OPERAND     IDENTFIER    i
OPERATOR    -            =
OPERAND     INTEGER      1
SEPARATOR   -            ;
  99 Int j;
CONTROL     DECLARE      Int
OPERAND     IDENTFIER    j
SEPARATOR   -            ;
  100 Bool bFlag;
CONTROL     DECLARE      Bool
OPERAND     IDENTFIER    bFlag
SEPARATOR   -            ;
  101 bFlag = T;
OPERAND     IDENTFIER    bFlag
OPERATOR    -            =
OPERAND     BOOLEAN      T
SEPARATOR   -            ;
  102 while i < 5:
CONTROL     FLOW         while
OPERAND     IDENTFIER    i
OPERATOR    -            <
OPERAND     INTEGER      5
SEPARATOR   -            :
  103     j = i;
OPERAND     IDENTFIER    j
OPERATOR    -            =
OPERAND     IDENTFIER    i
SEPARATOR   -            ;
  104     print("\ttop of while, i=", i, "j=", j);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . top of while, i=
                         09                
SEPARATOR   -            ,
OPERAND     IDENTFIER    i
SEPARATOR   -            ,
OPERAND     STRING       j=
SEPARATOR   -            ,
OPERAND     IDENTFIER    j
SEPARATOR   -            )
SEPARATOR   -            ;
  105     print("\t>>> Inner while j <= 3");
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . >>> Inner while j <= 3
                         09                      
SEPARATOR   -            )
SEPARATOR   -            ;
  106     while  j <= 3:
CONTROL     FLOW         while
OPERAND     IDENTFIER    j
OPERATOR    -            <=
OPERAND     INTEGER      3
SEPARATOR   -            :
  107         print("\t\tinner while, j=", j);
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . . inner while, j=
                         0909               
SEPARATOR   -            ,
OPERAND     IDENTFIER    j
SEPARATOR   -            )
SEPARATOR   -            ;
  108         j = j + 1;
OPERAND     IDENTFIER    j
OPERATOR    -            =
OPERAND     IDENTFIER    j
OPERATOR    -            +
OPERAND     INTEGER      1
SEPARATOR   -            ;
  109     endwhile;
CONTROL     END          endwhile
SEPARATOR   -            ;
  110     bFlag = F;
OPERAND     IDENTFIER    bFlag
OPERATOR    -            =
OPERAND     BOOLEAN      F
SEPARATOR   -            ;
  111     print("\tbottom of while, i=", i, "j=", j); // Did I break again?
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . bottom of while, i=
                         09                   
SEPARATOR   -            ,
OPERAND     IDENTFIER    i
SEPARATOR   -            ,
OPERAND     STRING       j=
SEPARATOR   -            ,
OPERAND     IDENTFIER    j
SEPARATOR   -            )
SEPARATOR   -            ;
  112     i = i + 1;
OPERAND     IDENTFIER    i
OPERATOR    -            =
OPERAND     IDENTFIER    i
OPERATOR    -            +
OPERAND     INTEGER      1
SEPARATOR   -            ;
  113 endwhile;
CONTROL     END          endwhile
SEPARATOR   -            ;
  114 print("\tAfter outer while"); // Test mc Testy
FUNCTION    BUILTIN      print
SEPARATOR   -            (
OPERAND     STRING       . After outer while
                         09                 
SEPARATOR   -            )
SEPARATOR   -            ;
